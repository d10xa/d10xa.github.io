var A=Object.defineProperty;var L=(c,t,e)=>t in c?A(c,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[t]=e;var u=(c,t,e)=>L(c,typeof t!="symbol"?t+"":t,e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function e(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=e(n);fetch(n.href,s)}})();class S{static _seededRandom(){return!this._useSeed||this._seed===null?Math.random():(this._seed=(this._seed*9301+49297)%233280,this._seed/233280)}static setSeed(t){this._seed=t,this._useSeed=!0}static clearSeed(){this._seed=null,this._useSeed=!1}static randomInt(t,e){return Math.floor(this._seededRandom()*(e-t+1))+t}static randomFloat(t,e){return this._seededRandom()*(e-t)+t}static clamp(t,e,i){return Math.min(Math.max(t,e),i)}static randomChoice(t){return t[Math.floor(this._seededRandom()*t.length)]}static calculatePercentage(t,e){return e>0?t/e*100:0}static getNeighborPositions(t,e,i){const n=[[-1,0],[1,0],[0,-1],[0,1]],s=[];for(const[o,d]of n){const l=t+o,h=e+d;l>=0&&l<i&&h>=0&&h<i&&s.push({x:l,y:h})}return s}}u(S,"_seed",null),u(S,"_useSeed",!1);const a={GRID_SIZES:{small:{name:"Маленькая (8x8)",size:8,cellSize:70,canvasSize:560},medium:{name:"Средняя (10x10)",size:10,cellSize:60,canvasSize:600},large:{name:"Большая (12x12)",size:12,cellSize:50,canvasSize:600},xlarge:{name:"Огромная (16x16)",size:16,cellSize:40,canvasSize:640}},DEFAULT_GRID_SIZE:"medium",GRID:{SIZE:10,CELL_SIZE:60},COLORS:{HEALTHY:"#4CAF50",LIGHT_INFECTION:"#FFEB3B",MEDIUM_INFECTION:"#FF9800",CRITICAL_INFECTION:"#F44336",HOSPITAL:"#2196F3",QUARANTINE:"#FFD700"},DIFFICULTY_SETTINGS:{easy:{budget:1700,actionPoints:3,spreadRate:.12,growthRate:.08,initialInfections:6,costs:{hospital:320,quarantine:75,vaccination:230}},normal:{budget:1200,actionPoints:2,spreadRate:.18,growthRate:.12,initialInfections:8,costs:{hospital:400,quarantine:100,vaccination:290}},hard:{budget:800,actionPoints:1,spreadRate:.24,growthRate:.18,initialInfections:10,costs:{hospital:480,quarantine:130,vaccination:390}}},INFECTION:{DEFEAT_THRESHOLD:80,CRITICAL_THRESHOLD:100,DEATH_TIMER:3,SPREAD_MODIFIERS:{HOSPITAL:.5,PANIC:1.5},GROWTH_MODIFIERS:{HOSPITAL:.1,QUARANTINE:0},HEALING:{HOSPITAL_SELF:12,HOSPITAL_NEIGHBORS:5},QUARANTINE:{ISOLATION_EFFECTIVENESS:1,ECONOMIC_PENALTY:.5,MAX_DURATION:3}},AUDIO:{FREQUENCIES:{CLICK:800,BUILD:523.25,ENDTURN:440,VICTORY:659.25,DEFEAT:220},DURATIONS:{CLICK:.1,BUILD:.3,ENDTURN:.2,VICTORY:.5,DEFEAT:.8}},EVENTS:{TRIGGER_CHANCE:.2,MIN_TURN:3,TYPES:[{name:"Паника населения",description:"СМИ нагнетают страх! Распространение удвоилось, но граждане готовы помогать (+1 действие).",duration:2,effect:"panic"},{name:"Волонтёрское движение",description:"Добровольцы помогают медикам. Вакцинация стоит на 50% дешевле.",duration:3,effect:"volunteers"},{name:"Эпидемический всплеск",description:"Вирус мутировал! Рост заражения внутри районов ускорен в 2.5 раза.",duration:2,effect:"outbreak"},{name:"Забастовка медиков",description:"Врачи требуют повышения зарплат! Больницы не работают.",duration:2,effect:"medical_strike"},{name:"Медицинская конференция",description:"Врачи обмениваются опытом. Больницы лечат в 3 раза эффективнее.",duration:3,effect:"medical_conference"},{name:"Информационная кампания",description:"Власти запустили образовательную программу. Распространение снижено на 40%.",duration:2,effect:"media_campaign"}]},UI:{NOTIFICATION_DURATION:3e3,EVENT_DISPLAY_DURATION:5e3}};function b(c){const t=a.GRID_SIZES[c];if(!t){console.warn(`Invalid grid size: ${c}, using default`);return}a.GRID.SIZE=t.size,a.GRID.CELL_SIZE=t.cellSize}class C{constructor(t,e){this.x=t,this.y=e,this.population=S.randomInt(100,500),this.infectionLevel=0,this.infectedCount=0,this.hasHospital=!1,this.isQuarantine=!1,this.quarantineDuration=0,this.vaccinationRate=0,this.deathTimer=0}infect(t){this.infectionLevel=t,this.infectedCount=Math.floor(this.population*t/100)}buildHospital(){return this.hasHospital?!1:(this.hasHospital=!0,!0)}setQuarantine(t){t&&!this.isQuarantine?(this.isQuarantine=!0,this.quarantineDuration=a.INFECTION.QUARANTINE.MAX_DURATION):t||(this.isQuarantine=!1,this.quarantineDuration=0)}vaccinate(t){return this.vaccinationRate<100?(this.vaccinationRate=Math.min(100,this.vaccinationRate+t),!0):!1}isHealthy(){return this.infectionLevel===0}isCritical(){return this.infectionLevel>a.INFECTION.CRITICAL_THRESHOLD}heal(t){return this.infectionLevel>0?(this.infectionLevel=Math.max(0,this.infectionLevel-t),this.infectedCount=Math.floor(this.population*this.infectionLevel/100),this.deathTimer=0,!0):!1}updateDeathTimer(){return this.infectionLevel>=100?(this.deathTimer++,this.deathTimer>=a.INFECTION.DEATH_TIMER):(this.deathTimer=0,!1)}processDeaths(){if(this.deathTimer>=a.INFECTION.DEATH_TIMER&&this.infectionLevel>=100){const t=S.randomFloat(.1,.2),e=Math.floor(this.population*t);return this.population=Math.max(1,this.population-e),this.infectionLevel=Math.max(0,this.infectionLevel-20),this.infectedCount=Math.floor(this.population*this.infectionLevel/100),this.deathTimer=0,e}return 0}updateQuarantine(){return this.isQuarantine&&(this.quarantineDuration--,this.quarantineDuration<=0)?(this.isQuarantine=!1,this.quarantineDuration=0,!0):!1}getEffectiveImmunity(){return this.vaccinationRate}isDying(){return this.deathTimer>0&&this.infectionLevel>=100}toJSON(){return{x:this.x,y:this.y,population:this.population,infectionLevel:this.infectionLevel,infectedCount:this.infectedCount,hasHospital:this.hasHospital,isQuarantine:this.isQuarantine,quarantineDuration:this.quarantineDuration,vaccinationRate:this.vaccinationRate,deathTimer:this.deathTimer}}static fromJSON(t){const e=new C(t.x,t.y);return e.population=typeof t.population=="object"?t.population.total:t.population,e.infectionLevel=t.infectionLevel,e.infectedCount=t.infectedCount,e.hasHospital=t.hasHospital,e.isQuarantine=t.isQuarantine,e.quarantineDuration=t.quarantineDuration||0,e.vaccinationRate=t.vaccinationRate,e.deathTimer=t.deathTimer||0,e}}class y{constructor(){this.size=a.GRID.SIZE,this.districts=[],this.totalPopulation=0,this._generate()}_generate(){for(let t=0;t<this.size;t++){this.districts[t]=[];for(let e=0;e<this.size;e++){const i=new C(e,t);this.districts[t][e]=i,this.totalPopulation+=i.population}}}getDistrict(t,e){return this.isValidPosition(t,e)?this.districts[e][t]:null}isValidPosition(t,e){return t>=0&&t<this.size&&e>=0&&e<this.size}getNeighbors(t,e){return S.getNeighborPositions(t,e,this.size).map(n=>this.getDistrict(n.x,n.y))}getAllDistricts(){const t=[];for(let e=0;e<this.size;e++)for(let i=0;i<this.size;i++)t.push(this.districts[e][i]);return t}getInfectedDistricts(){return this.getAllDistricts().filter(t=>!t.isHealthy())}getHealthyDistricts(){return this.getAllDistricts().filter(t=>t.isHealthy())}getTotalInfected(){return this.getAllDistricts().reduce((t,e)=>t+e.infectedCount,0)}getInfectionPercentage(){return S.calculatePercentage(this.getTotalInfected(),this.totalPopulation)}hasActiveInfection(){return this.getInfectedDistricts().length>0}infectRandomDistricts(t){const e=this.getHealthyDistricts();[...e].sort(()=>Math.random()-.5).slice(0,Math.min(t,e.length)).forEach(s=>{const o=S.randomFloat(30,50);s.infect(o)})}forEachDistrict(t){for(let e=0;e<this.size;e++)for(let i=0;i<this.size;i++)t(this.districts[e][i],i,e)}toJSON(){const t=[];for(let e=0;e<this.size;e++){t[e]=[];for(let i=0;i<this.size;i++)t[e][i]=this.districts[e][i].toJSON()}return{size:this.size,districts:t,totalPopulation:this.totalPopulation}}static fromJSON(t){const e=new y;e.size=t.size,e.totalPopulation=t.totalPopulation,e.districts=[];for(let i=0;i<e.size;i++){e.districts[i]=[];for(let n=0;n<e.size;n++)e.districts[i][n]=C.fromJSON(t.districts[i][n])}return e}}class I{constructor(t="normal"){this.difficulty=t,this.difficultySettings=a.DIFFICULTY_SETTINGS[t],this.currentTurn=1,this.budget=this.difficultySettings.budget,this.actionPoints=this.difficultySettings.actionPoints,this.gameOver=!1,this.victory=!1,this.defeat=!1,this.selectedCell=null,this.selectedAction=null,this.activeEvent=null,this.eventDuration=0}setDifficulty(t){this.difficulty=t,this.difficultySettings=a.DIFFICULTY_SETTINGS[t]}startNewTurn(){this.currentTurn++,this.actionPoints=this.difficultySettings.actionPoints+this.getEventModifier(null,"actionPoints"),this.budget+=200}canAffordAction(t){const e=this.difficultySettings.costs[t];return this.budget>=e&&this.actionPoints>=1}performAction(t){if(!this.canAffordAction(t))return!1;const e=this.difficultySettings.costs[t];return this.budget-=e,this.actionPoints-=1,!0}selectCell(t,e){this.selectedCell={x:t,y:e}}clearSelection(){this.selectedCell=null,this.selectedAction=null}selectAction(t){this.selectedAction=t,this.selectedCell=null}setGameOver(t){this.gameOver=!0,this.victory=t,this.defeat=!t}isGameOver(){return this.gameOver}setEvent(t,e){this.activeEvent=t,this.eventDuration=e,this.activeEvent&&(this.activeEvent.turnsRemaining=e)}updateEvent(){this.eventDuration>0&&(this.eventDuration--,this.activeEvent&&(this.activeEvent.turnsRemaining=this.eventDuration),this.eventDuration===0&&this.clearEvent())}clearEvent(){this.activeEvent=null,this.eventDuration=0}hasActiveEvent(){return this.activeEvent!==null}getEventModifier(t,e){if(!this.hasActiveEvent())return 1;switch(this.activeEvent.effect){case"panic":if(e==="spread")return 2;if(e==="actionPoints")return 1;break;case"volunteers":if(e==="vaccination_cost")return .5;break;case"outbreak":if(e==="growth")return 2.5;break;case"medical_strike":if(e==="hospital"&&t&&t.hasHospital)return 0;break;case"medical_conference":if(e==="hospital"&&t&&t.hasHospital)return .33;break;case"media_campaign":if(e==="spread")return .6;break}return 1}toJSON(){return{difficulty:this.difficulty,currentTurn:this.currentTurn,budget:this.budget,actionPoints:this.actionPoints,gameOver:this.gameOver,victory:this.victory,defeat:this.defeat,selectedCell:this.selectedCell,selectedAction:this.selectedAction,activeEvent:this.activeEvent,eventDuration:this.eventDuration}}static fromJSON(t){const e=new I(t.difficulty);return e.currentTurn=t.currentTurn,e.budget=t.budget,e.actionPoints=t.actionPoints,e.gameOver=t.gameOver,e.victory=t.victory,e.defeat=t.defeat,e.selectedCell=t.selectedCell,e.selectedAction=t.selectedAction,e.activeEvent=t.activeEvent,e.eventDuration=t.eventDuration,e}}class T{constructor(t,e){this.grid=t,this.gameState=e}spreadInfection(){const t=[];this.grid.forEachDistrict(e=>{if(e.infectionLevel>0&&!e.isQuarantine){const i=this.grid.getNeighbors(e.x,e.y);for(const n of i)if(n&&n.isHealthy()){if(n.getEffectiveImmunity()>=100)continue;const o=this._calculateSpreadChance(e,n);Math.random()<o&&t.push({district:n,level:S.randomFloat(5,15)})}}}),t.forEach(e=>{e.district.infect(e.level)})}growInfection(){this.grid.forEachDistrict(t=>{if(t.infectionLevel>0&&t.infectionLevel<100){let e=this.gameState.difficultySettings.growthRate;t.hasHospital&&(e*=a.INFECTION.GROWTH_MODIFIERS.HOSPITAL*this.gameState.getEventModifier(t,"hospital")),t.isQuarantine&&(e*=a.INFECTION.GROWTH_MODIFIERS.QUARANTINE),t.infectionLevel>=60&&(e*=a.INFECTION.SPREAD_MODIFIERS.PANIC),e*=this.gameState.getEventModifier(t,"growth");const i=Math.min(100,t.infectionLevel*(1+e));t.infect(i)}})}healWithHospitals(){this.grid.forEachDistrict(t=>{t.hasHospital&&(this._healDistrict(t,t),this.grid.getNeighbors(t.x,t.y).forEach(i=>{i&&i.infectionLevel>0&&this._healDistrict(t,i)}))})}_healDistrict(t,e){if(e.infectionLevel<=0)return;let i=e===t?a.INFECTION.HEALING.HOSPITAL_SELF:a.INFECTION.HEALING.HOSPITAL_NEIGHBORS;i*=this.gameState.getEventModifier(t,"hospital"),e.heal(i)}processDeathTimers(){let t=0;const e=[];return this.grid.forEachDistrict(i=>{if(i.updateDeathTimer()){const s=i.processDeaths();t+=s,s>0&&e.push({district:i,deaths:s})}i.updateQuarantine()}),{totalDeaths:t,dyingDistricts:e}}_calculateSpreadChance(t,e){let i=this.gameState.difficultySettings.spreadRate;t.infectionLevel>50&&(i*=1.67),t.infectionLevel>75&&(i*=2.33),e.hasHospital&&(i*=a.INFECTION.SPREAD_MODIFIERS.HOSPITAL);const n=e.getEffectiveImmunity();return i*=1-n/100,i*=this.gameState.getEventModifier(e,"spread"),Math.min(.5,i)}checkVictoryCondition(){const t=this.grid.getInfectionPercentage(),e=this._hasDyingDistricts();return t<2&&!e&&this.gameState.currentTurn>=5}checkDefeatCondition(){return this.grid.getInfectionPercentage()>=a.INFECTION.DEFEAT_THRESHOLD}_hasDyingDistricts(){let t=!1;return this.grid.forEachDistrict(e=>{e.isDying()&&(t=!0)}),t}checkGameOverConditions(){return this.gameState.isGameOver()?null:this.checkDefeatCondition()?"defeat":this.checkVictoryCondition()?"victory":null}}class _{constructor(t,e){this.grid=t,this.gameState=e}performAction(t,e,i){const n=this.grid.getDistrict(t,e);if(!n||!this.gameState.canAffordAction(i))return!1;let s=!1;switch(i){case"hospital":s=this._buildHospital(n);break;case"quarantine":s=this._setQuarantine(n);break;case"vaccination":s=this._vaccinate(n);break;default:return!1}return s&&this.gameState.performAction(i),s}_buildHospital(t){return t.buildHospital()}_setQuarantine(t){return t.isQuarantine?!1:(t.setQuarantine(!0),!0)}_vaccinate(t){return t.vaccinate(30)}canPerformAction(t){return this.gameState.canAffordAction(t)}getActionCost(t){let e=this.gameState.difficultySettings.costs[t];return t==="vaccination"&&(e*=this.gameState.getEventModifier(null,"vaccination_cost")),Math.round(e)}getActionCosts(){return{hospital:this.getActionCost("hospital"),quarantine:this.getActionCost("quarantine"),vaccination:this.getActionCost("vaccination")}}}class x{constructor(t,e,i){this.gameState=t,this.infectionSystem=e,this.eventSystem=i}endTurn(){if(this.gameState.isGameOver())return null;this.gameState.startNewTurn(),this.infectionSystem.healWithHospitals(),this.infectionSystem.spreadInfection(),this.infectionSystem.growInfection();const t=this.infectionSystem.processDeathTimers();this.gameState.updateEvent(),this.eventSystem&&(this.eventSystem.processEvents(),this.eventSystem.updateEventDisplay());const e=this.infectionSystem.checkGameOverConditions();return e&&this.gameState.setGameOver(e==="victory"),{turn:this.gameState.currentTurn,gameResult:e,budget:this.gameState.budget,actionPoints:this.gameState.actionPoints,deathResults:t}}canEndTurn(){return!this.gameState.isGameOver()}}class R{constructor(t){this.ctx=t,this.cellSize=a.GRID.CELL_SIZE}renderCell(t,e,i){const n=e*this.cellSize,s=i*this.cellSize;this._renderBaseCell(t,n,s),this._renderCriticalPulse(t,n,s),this._renderDeathTimer(t,n,s),this._renderPopulationCount(t,n,s),this._renderHospital(t,n,s),this._renderQuarantine(t,n,s),this._renderBottomRow(t,n,s),this._renderInfectionLevel(t,n,s)}_renderBaseCell(t,e,i){this.ctx.fillStyle=this._getCellColor(t.infectionLevel),this.ctx.fillRect(e,i,this.cellSize-1,this.cellSize-1)}_renderCriticalPulse(t,e,i){if(t.isCritical()){const n=Math.sin(Date.now()*.005)*.2+.8;this.ctx.fillStyle=`rgba(244, 67, 54, ${n*.4})`,this.ctx.fillRect(e,i,this.cellSize-1,this.cellSize-1)}}_renderPopulationCount(t,e,i){const n=Math.max(8,this.cellSize*.15);this.ctx.fillStyle="rgba(0, 0, 0, 0.5)";const s=t.population.toString(),o=this.ctx.measureText(s).width;this.ctx.fillRect(e+this.cellSize-o-4,i+2,o+4,n+2),this.ctx.fillStyle="white",this.ctx.font=`bold ${n}px sans-serif`,this.ctx.textAlign="right",this.ctx.textBaseline="top",this.ctx.fillText(s,e+this.cellSize-2,i+2)}_renderHospital(t,e,i){if(t.hasHospital){this.ctx.strokeStyle=a.COLORS.HOSPITAL,this.ctx.lineWidth=3,this.ctx.strokeRect(e+2,i+2,this.cellSize-5,this.cellSize-5);const n=Math.max(12,this.cellSize*.25);this.ctx.fillStyle=a.COLORS.HOSPITAL,this.ctx.font=`bold ${n}px sans-serif`,this.ctx.textAlign="left",this.ctx.textBaseline="top",this.ctx.fillText("🏥",e+4,i+4)}}_renderQuarantine(t,e,i){t.isQuarantine&&(this.ctx.strokeStyle="rgba(0, 0, 0, 0.8)",this.ctx.lineWidth=5,this.ctx.setLineDash([5,3]),this.ctx.strokeRect(e+2,i+2,this.cellSize-5,this.cellSize-5),this.ctx.strokeStyle=a.COLORS.QUARANTINE,this.ctx.lineWidth=3,this.ctx.setLineDash([5,3]),this.ctx.strokeRect(e+2,i+2,this.cellSize-5,this.cellSize-5),this.ctx.setLineDash([]))}_renderBottomRow(t,e,i){const n=Math.max(8,this.cellSize*.15);i+this.cellSize-n-3,t.vaccinationRate>0&&(this.ctx.fillStyle="rgba(156, 39, 176, 0.9)",this.ctx.font=`${n}px sans-serif`,this.ctx.textAlign="left",this.ctx.textBaseline="bottom",this.ctx.fillText(`💉${Math.floor(t.vaccinationRate)}%`,e+2,i+this.cellSize-2));const s=t.getEffectiveImmunity();s>=50&&(this.ctx.fillStyle="rgba(76, 175, 80, 0.9)",this.ctx.font=`${n}px sans-serif`,this.ctx.textAlign="right",this.ctx.textBaseline="bottom",this.ctx.fillText(`🛡️${Math.floor(s)}%`,e+this.cellSize-2,i+this.cellSize-2))}_renderInfectionLevel(t,e,i){if(t.infectionLevel>0){const n=Math.floor(t.infectionLevel),s=Math.max(14,this.cellSize*.3),o=e+this.cellSize/2,d=i+this.cellSize/2;this.ctx.font=`bold ${s}px sans-serif`;const l=`${n}%`,f=this.ctx.measureText(l).width+8,E=s+4,m=this._getCellColor(t.infectionLevel),g=this._isLightColor(m);g?this.ctx.fillStyle="rgba(255, 255, 255, 0.85)":this.ctx.fillStyle="rgba(0, 0, 0, 0.7)",this.ctx.fillRect(o-f/2,d-E/2,f,E),this.ctx.fillStyle=g?"#1a1a1a":"white",this.ctx.textAlign="center",this.ctx.textBaseline="middle",this.ctx.fillText(l,o,d)}}_isLightColor(t){const e=t.replace("#",""),i=parseInt(e.substring(0,2),16),n=parseInt(e.substring(2,4),16),s=parseInt(e.substring(4,6),16);return(.299*i+.587*n+.114*s)/255>.5}_renderDeathTimer(t,e,i){if(t.isDying()){const n=Math.sin(Date.now()*.008)*.5+.5;this.ctx.strokeStyle=`rgba(255, 0, 0, ${.8+n*.2})`,this.ctx.lineWidth=4,this.ctx.strokeRect(e,i,this.cellSize-1,this.cellSize-1),this.ctx.fillStyle=`rgba(255, 0, 0, ${.9+n*.1})`,this.ctx.font="12px sans-serif",this.ctx.textAlign="right",this.ctx.textBaseline="top",this.ctx.fillText(`💀${t.deathTimer}`,e+this.cellSize-2,i+2)}}_getCellColor(t){return t===0?a.COLORS.HEALTHY:t<30?a.COLORS.LIGHT_INFECTION:t<60?a.COLORS.MEDIUM_INFECTION:a.COLORS.CRITICAL_INFECTION}renderSelection(t){if(t){const e=t.x,i=t.y,n=e*this.cellSize,s=i*this.cellSize,o=Date.now()*.003,d=Math.sin(o)*.3+.7;this.ctx.strokeStyle=`rgba(33, 150, 243, ${d})`,this.ctx.lineWidth=3,this.ctx.strokeRect(n+1,s+1,this.cellSize-2,this.cellSize-2),this.ctx.strokeStyle="#2196F3",this.ctx.lineWidth=2,this.ctx.strokeRect(n+3,s+3,this.cellSize-7,this.cellSize-7),this._renderSelectionCorners(n,s)}}_renderSelectionCorners(t,e){this.ctx.strokeStyle="#2196F3",this.ctx.lineWidth=3,this.ctx.beginPath(),this.ctx.moveTo(t,e+8),this.ctx.lineTo(t,e),this.ctx.lineTo(t+8,e),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(t+this.cellSize-8,e),this.ctx.lineTo(t+this.cellSize,e),this.ctx.lineTo(t+this.cellSize,e+8),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(t,e+this.cellSize-8),this.ctx.lineTo(t,e+this.cellSize),this.ctx.lineTo(t+8,e+this.cellSize),this.ctx.stroke(),this.ctx.beginPath(),this.ctx.moveTo(t+this.cellSize-8,e+this.cellSize),this.ctx.lineTo(t+this.cellSize,e+this.cellSize),this.ctx.lineTo(t+this.cellSize,e+this.cellSize-8),this.ctx.stroke()}}class O{constructor(t){this.canvas=document.getElementById(t),this.ctx=this.canvas.getContext("2d"),this.cellRenderer=new R(this.ctx),this.gridSize=a.GRID.SIZE,this.cellSize=a.GRID.CELL_SIZE,this._setupCanvas()}_setupCanvas(){const t=this.gridSize*this.cellSize,e=window.devicePixelRatio||1;this.canvas.width=t*e,this.canvas.height=t*e,this.canvas.style.width=`${t}px`,this.canvas.style.height=`${t}px`,this.ctx.scale(e,e)}render(t,e){this._clearCanvas(),this._renderGrid(t),this._renderSelection(e.selectedCell),this._renderGridLines()}_clearCanvas(){this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height)}_renderGrid(t){t.forEachDistrict((e,i,n)=>{this.cellRenderer.renderCell(e,i,n)})}_renderSelection(t){this.cellRenderer.renderSelection(t)}_renderGridLines(){this.ctx.strokeStyle="#ccc",this.ctx.lineWidth=.5;for(let t=0;t<=this.gridSize;t++)this.ctx.beginPath(),this.ctx.moveTo(t*this.cellSize,0),this.ctx.lineTo(t*this.cellSize,this.canvas.height),this.ctx.stroke();for(let t=0;t<=this.gridSize;t++)this.ctx.beginPath(),this.ctx.moveTo(0,t*this.cellSize),this.ctx.lineTo(this.canvas.width,t*this.cellSize),this.ctx.stroke()}getCanvasPosition(t){const e=this.canvas.getBoundingClientRect();return{x:Math.floor((t.clientX-e.left)/this.cellSize),y:Math.floor((t.clientY-e.top)/this.cellSize)}}isValidPosition(t,e){return t>=0&&t<this.gridSize&&e>=0&&e<this.gridSize}updateCanvasSize(t){this.gridSize=a.GRID.SIZE,this.cellSize=a.GRID.CELL_SIZE;const e=window.devicePixelRatio||1;this.canvas.width=t*e,this.canvas.height=t*e,this.canvas.style.width=`${t}px`,this.canvas.style.height=`${t}px`,this.ctx.scale(e,e),this.cellRenderer=new R(this.ctx)}}class N{constructor(t,e){this.renderer=t,this.gameState=e,this.animationId=null,this.isRunning=!1}start(t){this.isRunning||(this.isRunning=!0,this._animate(t))}stop(){this.isRunning=!1,this.animationId&&(cancelAnimationFrame(this.animationId),this.animationId=null)}_animate(t){if(!this.isRunning||this.gameState.isGameOver()){this.stop();return}this.renderer.render(t,this.gameState),this.animationId=requestAnimationFrame(()=>this._animate(t))}forceRender(t){this.renderer.render(t,this.gameState)}}class r{static getElementById(t){const e=document.getElementById(t);return e||console.warn(`Element with id '${t}' not found`),e}static updateTextContent(t,e){const i=this.getElementById(t);i&&(i.textContent=e)}static updateInnerHTML(t,e){const i=this.getElementById(t);i&&(i.innerHTML=e)}static setDisplay(t,e){const i=this.getElementById(t);i&&(i.style.display=e)}static setVisibility(t,e){const i=this.getElementById(t);i&&(i.style.visibility=e)}static addClass(t,e){t&&t.classList&&t.classList.add(e)}static removeClass(t,e){t&&t.classList&&t.classList.remove(e)}static addEventListener(t,e,i){const n=this.getElementById(t);n&&n.addEventListener(e,i)}static createElement(t,e=null,i=null){const n=document.createElement(t);return e&&(n.className=e),i&&(n.textContent=i),n}static getCanvasContext(t){const e=this.getElementById(t);return e?e.getContext("2d"):null}static getCanvasMousePosition(t,e){const i=t.getBoundingClientRect();return{x:e.clientX-i.left,y:e.clientY-i.top}}}class D{constructor(t,e){this.gameState=t,this.grid=e}updateAll(){this.updateResourceBar(),this.updateTurnCounter()}updateResourceBar(){r.updateTextContent("budget",this.gameState.budget),r.updateTextContent("action-points",this.gameState.actionPoints),r.updateTextContent("turn-counter",this.gameState.currentTurn);const t=this.grid.getTotalInfected();r.updateTextContent("total-infected",t);const e=this.getHospitalCount();r.updateTextContent("hospital-count",e)}getHospitalCount(){let t=0;return this.grid.forEachDistrict(e=>{e.hasHospital&&t++}),t}updateResources(){this.updateResourceBar()}updateTurnCounter(){r.updateTextContent("turn-counter",this.gameState.currentTurn)}updateDifficultySelector(){const t=r.getElementById("difficulty-select");t&&(t.value=this.gameState.difficulty)}updateGridSizeSelector(){const t=r.getElementById("grid-size-select");if(t){const e=a.GRID.SIZE;for(const[i,n]of Object.entries(a.GRID_SIZES))if(n.size===e){t.value=i;break}}}showGameOverScreen(t,e){const i=r.createElement("div","game-over-overlay"),n=t==="victory"?`🎉 ПОБЕДА! 🎉<br>Эпидемия остановлена за ${e.turns} ходов!`:"💀 ПОРАЖЕНИЕ 💀<br>Эпидемия захватила город",s=this.getHospitalCount();i.innerHTML=`
            <div class="game-over-content">
                <h2>${n}</h2>
                <div class="final-stats">
                    <p>Ходов сыграно: <span>${e.turns}</span></p>
                    <p>Всего заражено: <span>${e.infectionPercentage}%</span></p>
                    <p>Потрачено средств: <span>${e.moneySpent}₽</span></p>
                    <p>Построено больниц: <span>${s}</span></p>
                </div>
                <button class="btn-primary" onclick="location.reload()">Играть снова</button>
            </div>
        `,document.body.appendChild(i)}updateCanvasSize(t){const e=r.getElementById("gameCanvas");e&&(e.width=t,e.height=t)}}class z{constructor(t,e,i,n,s,o,d,l){u(this,"onActionPerformed",null);u(this,"onTurnEnded",null);u(this,"onGameOver",null);u(this,"onDifficultyChanged",null);u(this,"onGridSizeChanged",null);u(this,"onRenderRequested",null);u(this,"onSaveGame",null);u(this,"onLoadGame",null);u(this,"onToggleSound",null);this.renderer=t,this.gameState=e,this.playerActions=i,this.turnManager=n,this.uiManager=s,this.selectionPanel=o,this.grid=d,this.eventSystem=l,this._setupEventListeners()}_setupEventListeners(){this._setupCanvasEvents(),this._setupButtonEvents(),this._setupGameControls(),this._setupEventPanelControls()}_setupCanvasEvents(){const t=this.renderer.canvas;t.addEventListener("click",e=>this._handleCanvasClick(e)),t.addEventListener("mousemove",e=>this._handleCanvasMouseMove(e)),t.style.cursor="pointer"}_setupButtonEvents(){r.addEventListener("build-hospital-btn","click",()=>{this._selectAction("hospital")}),r.addEventListener("quarantine-btn","click",()=>{this._selectAction("quarantine")}),r.addEventListener("vaccination-btn","click",()=>{this._selectAction("vaccination")}),r.addEventListener("end-turn-btn","click",()=>{this._endTurn()})}_setupGameControls(){r.addEventListener("difficulty-select","change",t=>{this._changeDifficulty(t.target.value)}),r.addEventListener("grid-size-select","change",t=>{this._changeGridSize(t.target.value)}),r.addEventListener("restart-btn","click",()=>{this._restartGame()}),r.addEventListener("save-btn","click",()=>{var t;(t=this.onSaveGame)==null||t.call(this)}),r.addEventListener("load-btn","click",()=>{var t;(t=this.onLoadGame)==null||t.call(this)}),r.addEventListener("sound-toggle","click",()=>{var t;(t=this.onToggleSound)==null||t.call(this)})}_handleCanvasClick(t){const e=this.renderer.getCanvasPosition(t);this.renderer.isValidPosition(e.x,e.y)&&(this.gameState.selectedAction?this._performAction(e.x,e.y):this._selectCell(e.x,e.y))}_handleCanvasMouseMove(t){const e=this.renderer.getCanvasPosition(t);this.renderer.isValidPosition(e.x,e.y)?this.renderer.canvas.style.cursor="pointer":this.renderer.canvas.style.cursor="default"}_selectCell(t,e){var i;this.gameState.selectCell(t,e),this.selectionPanel.show(t,e),(i=this.onRenderRequested)==null||i.call(this)}_selectAction(t){this.gameState.selectedCell?this._performActionOnSelectedCell(t):(this.gameState.selectAction(t),this.gameState.clearSelection(),this.renderer.canvas.style.cursor="crosshair")}_performActionOnSelectedCell(t){var s,o;const e=this.gameState.selectedCell.x,i=this.gameState.selectedCell.y;console.log(`Performing action ${t} on district [${e}, ${i}]`);const n=this.playerActions.performAction(e,i,t);console.log(`Action ${t} result:`,n),n&&(this.uiManager.updateResources(),(s=this.onActionPerformed)==null||s.call(this,t)),(o=this.onRenderRequested)==null||o.call(this)}_performAction(t,e){var n,s;this.playerActions.performAction(t,e,this.gameState.selectedAction)&&(this.uiManager.updateResources(),(n=this.onActionPerformed)==null||n.call(this,this.gameState.selectedAction)),this.gameState.clearSelection(),this.renderer.canvas.style.cursor="pointer",(s=this.onRenderRequested)==null||s.call(this)}_endTurn(){var e,i,n;if(!this.turnManager.canEndTurn())return;const t=this.turnManager.endTurn();this.uiManager.updateAll(),t.gameResult&&((e=this.onGameOver)==null||e.call(this,t.gameResult)),(i=this.onTurnEnded)==null||i.call(this,t),(n=this.onRenderRequested)==null||n.call(this)}_changeDifficulty(t){var e;this.gameState.setDifficulty(t),(e=this.onDifficultyChanged)==null||e.call(this,t)}_changeGridSize(t){var e;(e=this.onGridSizeChanged)==null||e.call(this,t)}_restartGame(){location.reload()}_setupEventPanelControls(){r.addEventListener("event-close-btn","click",()=>{this.eventSystem&&this.eventSystem.hideEventPanel()}),r.addEventListener("event-indicator","click",()=>{this.eventSystem&&this.eventSystem.showEventPanel()})}}class M{constructor(){this.activeNotifications=new Set}show(t,e="info"){const i=this._createNotification(t,e);document.body.appendChild(i),this.activeNotifications.add(i),setTimeout(()=>{this._removeNotification(i)},a.UI.NOTIFICATION_DURATION)}showSuccess(t){this.show(t,"success")}showError(t){this.show(t,"error")}showWarning(t){this.show(t,"warning")}_createNotification(t,e){return r.createElement("div",`notification notification-${e}`,t)}_removeNotification(t){this.activeNotifications.has(t)&&(t.remove(),this.activeNotifications.delete(t))}clear(){this.activeNotifications.forEach(t=>{t.remove()}),this.activeNotifications.clear()}}class w{constructor(t,e,i){this.gameState=t,this.grid=e,this.playerActions=i,this.panelElement=r.getElementById("selection-panel"),this.canvas=r.getElementById("gameCanvas"),this.currentDistrict=null,this.isVisible=!1,this.onActionPerformed=null,this.onRenderRequested=null,this._setupEventListeners()}show(t,e){const i=this.grid.getDistrict(t,e);if(!i){this.hide();return}this.currentDistrict=i,this.isVisible=!0,this.panelElement.style.display="block",this._updateContent(i);const n=this._calculatePosition(t,e);this.panelElement.style.left=n.left+"px",this.panelElement.style.top=n.top+"px"}hide(){this.isVisible=!1,this.currentDistrict=null,this.panelElement.style.display="none"}refresh(){this.isVisible&&this.currentDistrict&&this._updateContent(this.currentDistrict)}_updateContent(t){this._updateInfo(t),this._updateActions(t)}_updateInfo(t){const e=this.panelElement.querySelector(".popup-coords");e&&(e.textContent=`Район [${t.x}, ${t.y}]`);const i=this.panelElement.querySelectorAll(".popup-stat-value");i.length>=2&&(i[0].textContent=t.population,i[1].textContent=Math.round(t.infectionLevel))}_updateActions(t){const e=this.gameState.budget,i=this.gameState.actionPoints,n=this.playerActions.getActionCost("hospital"),s=this.playerActions.getActionCost("quarantine"),o=this.playerActions.getActionCost("vaccination");[{id:"action-hospital",cost:n,canPerform:!t.hasHospital&&e>=n&&i>0,costLabel:`${n}₽`},{id:"action-quarantine",cost:s,canPerform:!t.isQuarantine&&e>=s&&i>0,costLabel:`${s}₽`},{id:"action-vaccine",cost:o,canPerform:t.vaccinationRate<100&&e>=o&&i>0,costLabel:`${o}₽`}].forEach(l=>{const h=r.getElementById(l.id);if(h){h.disabled=!l.canPerform;const f=h.querySelector(".price");f&&(f.textContent=l.costLabel)}})}_calculatePosition(t,e){const i=this.canvas.getBoundingClientRect(),n=a.GRID.SIZE,s=i.width/n,o=t*s,d=e*s,l=i.left+o,h=i.top+d,f=this.panelElement.offsetWidth,E=this.panelElement.offsetHeight,m=12,g=10;let v,p;return l+s+m+f<window.innerWidth-g?(v=l+s+m,p=h):l-m-f>g?(v=l-m-f,p=h):h+s+m+E<window.innerHeight-g?(v=l,p=h+s+m):(v=l,p=h-m-E),v=Math.max(g,Math.min(v,window.innerWidth-f-g)),p=Math.max(g,Math.min(p,window.innerHeight-E-g)),{left:v,top:p}}_setupEventListeners(){r.addEventListener("action-hospital","click",()=>{this._performAction("hospital")}),r.addEventListener("action-quarantine","click",()=>{this._performAction("quarantine")}),r.addEventListener("action-vaccine","click",()=>{this._performAction("vaccination")}),document.addEventListener("click",t=>{this.isVisible&&!this.panelElement.contains(t.target)&&!t.target.closest("#gameCanvas")&&this.hide()})}_performAction(t){var i,n;if(!this.currentDistrict)return;this.playerActions.performAction(this.currentDistrict.x,this.currentDistrict.y,t)&&(this.refresh(),(i=this.onActionPerformed)==null||i.call(this,t),(n=this.onRenderRequested)==null||n.call(this))}isShown(){return this.isVisible}getCurrentDistrict(){return this.currentDistrict}}class P{constructor(){this.audioContext=null,this.enabled=!0,this._initAudio()}_initAudio(){try{this.audioContext=new(window.AudioContext||window.webkitAudioContext)}catch{console.warn("Web Audio API not supported"),this.enabled=!1}}playSound(t){if(!this.enabled||!this.audioContext)return;const e=this._getSoundConfig(t);if(!e)return;const i=this.audioContext.createOscillator(),n=this.audioContext.createGain();i.connect(n),n.connect(this.audioContext.destination),i.frequency.setValueAtTime(e.frequency,this.audioContext.currentTime),i.type="sine",n.gain.setValueAtTime(.1,this.audioContext.currentTime),n.gain.exponentialRampToValueAtTime(.01,this.audioContext.currentTime+e.duration),i.start(this.audioContext.currentTime),i.stop(this.audioContext.currentTime+e.duration)}_getSoundConfig(t){const e=a.AUDIO.FREQUENCIES,i=a.AUDIO.DURATIONS,n=t.toUpperCase();return e[n]&&i[n]?{frequency:e[n],duration:i[n]}:null}toggle(){return this.enabled=!this.enabled,this._updateToggleButton(),this.enabled&&this.audioContext&&this.audioContext.state==="suspended"&&this.audioContext.resume(),this.enabled}_updateToggleButton(){const t=r.getElementById("sound-toggle");t&&(t.textContent=this.enabled?"🔊 Звук":"🔇 Звук")}isEnabled(){return this.enabled}}class G{constructor(t){this.gameState=t,this.isEventPanelManuallyHidden=!1}processEvents(){this.gameState.updateEvent(),!this.gameState.hasActiveEvent()&&this._shouldTriggerEvent()&&this._triggerRandomEvent()}_shouldTriggerEvent(){return Math.random()<a.EVENTS.TRIGGER_CHANCE&&this.gameState.currentTurn>a.EVENTS.MIN_TURN}_triggerRandomEvent(){const t=S.randomChoice(a.EVENTS.TYPES);this.gameState.setEvent(t,t.duration),this.isEventPanelManuallyHidden=!1,this._displayEvent(t)}_displayEvent(t){typeof document>"u"||this.updateEventDisplay()}updateEventDisplay(){if(typeof document>"u")return;const t=r.getElementById("event-panel"),e=r.getElementById("event-text"),i=r.getElementById("event-indicator");if(!t||!e||!i)return;const n=this.gameState.activeEvent;if(n&&n.turnsRemaining>0){const s=n.turnsRemaining===1?"ход":n.turnsRemaining<5?"хода":"ходов";e.innerHTML=`
                <strong>${n.name}</strong><br>
                ${n.description}<br>
                <strong>⏱️ Осталось: ${n.turnsRemaining} ${s}</strong>
            `,this.isEventPanelManuallyHidden?(r.setDisplay("event-panel","none"),r.setVisibility("event-indicator","visible")):(r.setDisplay("event-panel","block"),r.setVisibility("event-indicator","hidden"))}else r.setDisplay("event-panel","none"),r.setVisibility("event-indicator","hidden"),this.isEventPanelManuallyHidden=!1}getCurrentEvent(){return this.gameState.activeEvent}hasActiveEvent(){return this.gameState.hasActiveEvent()}hideEventPanel(){this.isEventPanelManuallyHidden=!0,this.updateEventDisplay()}showEventPanel(){this.isEventPanelManuallyHidden=!1,this.updateEventDisplay()}}class H{constructor(){this.saveKey="cityQuarantineSave",this.currentVersion="1.1"}save(t,e){const i={gameState:t.toJSON(),grid:e.toJSON(),gridSize:a.GRID.SIZE,savedAt:new Date().toISOString(),version:this.currentVersion};try{return localStorage.setItem(this.saveKey,JSON.stringify(i)),{success:!0,message:"Игра сохранена!"}}catch(n){return console.error("Save failed:",n),{success:!1,message:"Ошибка сохранения!"}}}load(){try{const t=localStorage.getItem(this.saveKey);if(!t)return{success:!1,message:"Нет сохраненной игры!"};const e=JSON.parse(t);if(!this._isValidSaveData(e))return{success:!1,message:"Поврежденное сохранение!"};const i=e.gridSize||16,n=a.GRID.SIZE;if(i!==n)return console.warn(`Grid size mismatch: saved=${i}, current=${n}`),this.deleteSave(),{success:!1,message:`Сохранение несовместимо (размер ${i}x${i}). Текущий размер: ${n}x${n}. Начните новую игру.`};const s=I.fromJSON(e.gameState),o=y.fromJSON(e.grid);return{success:!0,message:"Игра загружена!",data:{gameState:s,grid:o}}}catch(t){return console.error("Load failed:",t),{success:!1,message:"Ошибка загрузки!"}}}hasSavedGame(){return localStorage.getItem(this.saveKey)!==null}deleteSave(){try{return localStorage.removeItem(this.saveKey),{success:!0,message:"Сохранение удалено!"}}catch(t){return console.error("Delete failed:",t),{success:!1,message:"Ошибка удаления!"}}}getSaveInfo(){var t,e;try{const i=localStorage.getItem(this.saveKey);if(!i)return null;const n=JSON.parse(i);return{savedAt:n.savedAt,version:n.version,turn:(t=n.gameState)==null?void 0:t.currentTurn,difficulty:(e=n.gameState)==null?void 0:e.difficulty}}catch(i){return console.error("Failed to get save info:",i),null}}_isValidSaveData(t){return t&&t.gameState&&t.grid&&t.version&&t.savedAt}}class F{constructor(){this.currentDifficulty="normal"}setDifficulty(t){return this.isValidDifficulty(t)?(this.currentDifficulty=t,!0):!1}getDifficulty(){return this.currentDifficulty}getSettings(t=this.currentDifficulty){return a.DIFFICULTY_SETTINGS[t]}isValidDifficulty(t){return t in a.DIFFICULTY_SETTINGS}getAllDifficulties(){return Object.keys(a.DIFFICULTY_SETTINGS)}getDifficultyNames(){return{easy:"Легкая",normal:"Нормальная",hard:"Сложная"}}getDifficultyDescription(t){const e=this.getSettings(t);return e?{budget:e.budget,actionPoints:e.actionPoints,spreadRate:Math.round(e.spreadRate*100),initialInfections:e.initialInfections,costs:e.costs}:null}compareWith(t){const e=this.getSettings(),i=this.getSettings(t);return!e||!i?null:{budgetDiff:i.budget-e.budget,actionPointsDiff:i.actionPoints-e.actionPoints,spreadRateDiff:i.spreadRate-e.spreadRate,infectionsDiff:i.initialInfections-e.initialInfections}}}class k{constructor(){this._initializeComponents(),this._setupEventHandlers(),this._startGame()}_initializeComponents(){this.gameState=new I("normal"),this.grid=new y,this.infectionSystem=new T(this.grid,this.gameState),this.playerActions=new _(this.grid,this.gameState),this.audioSystem=new P,this.eventSystem=new G(this.gameState),this.saveLoadManager=new H,this.difficultyManager=new F,this.turnManager=new x(this.gameState,this.infectionSystem,this.eventSystem),this.renderer=new O("gameCanvas"),this.animationManager=new N(this.renderer,this.gameState),this.uiManager=new D(this.gameState,this.grid),this.notificationSystem=new M,this.selectionPanel=new w(this.gameState,this.grid,this.playerActions),this.inputHandler=new z(this.renderer,this.gameState,this.playerActions,this.turnManager,this.uiManager,this.selectionPanel,this.grid,this.eventSystem)}_setupEventHandlers(){this.inputHandler.onActionPerformed=t=>{this.audioSystem.playSound("build")},this.inputHandler.onTurnEnded=t=>{this.audioSystem.playSound("endTurn")},this.inputHandler.onGameOver=t=>{this._handleGameOver(t)},this.inputHandler.onDifficultyChanged=t=>{this.difficultyManager.setDifficulty(t)},this.inputHandler.onRenderRequested=()=>{this.animationManager.forceRender(this.grid)},this.inputHandler.onSaveGame=()=>{this._saveGame()},this.inputHandler.onLoadGame=()=>{this._loadGame()},this.inputHandler.onToggleSound=()=>{this.audioSystem.toggle()},this.inputHandler.onGridSizeChanged=t=>{this._changeGridSize(t)},this.selectionPanel.onActionPerformed=t=>{this.audioSystem.playSound("build"),this.uiManager.updateResourceBar()},this.selectionPanel.onRenderRequested=()=>{this.animationManager.forceRender(this.grid)}}_startGame(){this.grid.infectRandomDistricts(this.gameState.difficultySettings.initialInfections),this.uiManager.updateAll(),this.animationManager.start(this.grid)}_handleGameOver(t){this.audioSystem.playSound(t==="victory"?"victory":"defeat");const e=this._calculateFinalStats();this.uiManager.showGameOverScreen(t,e),this.animationManager.stop()}_calculateFinalStats(){const t=this.gameState.difficultySettings.budget,e=(this.gameState.currentTurn-1)*200,n=t+e-this.gameState.budget;return{turns:this.gameState.currentTurn,infectionPercentage:Math.floor(this.grid.getInfectionPercentage()),moneySpent:n}}_saveGame(){const t=this.saveLoadManager.save(this.gameState,this.grid);t.success?this.notificationSystem.showSuccess(t.message):this.notificationSystem.showError(t.message)}_loadGame(){const t=this.saveLoadManager.load();t.success?(this.gameState=t.data.gameState,this.grid=t.data.grid,this.infectionSystem=new T(this.grid,this.gameState),this.playerActions=new _(this.grid,this.gameState),this.turnManager=new x(this.gameState,this.infectionSystem,this.eventSystem),this.uiManager=new D(this.gameState,this.grid),this.uiManager.updateAll(),this.uiManager.updateDifficultySelector(),this.uiManager.updateGridSizeSelector(),this.animationManager.forceRender(this.grid),this.notificationSystem.showSuccess(t.message)):this.notificationSystem.showWarning(t.message)}_changeGridSize(t){b(t);const e=a.GRID_SIZES[t];if(!e){this.notificationSystem.showError("Неверный размер сетки");return}this.uiManager.updateCanvasSize(e.canvasSize),this.renderer.updateCanvasSize(e.canvasSize),this._restartGame(),this.notificationSystem.showSuccess(`Размер сетки изменен на ${e.name}`)}_restartGame(){this.animationManager.stop(),this.gameState=new I(this.gameState.difficulty),this.grid=new y,this.infectionSystem=new T(this.grid,this.gameState),this.playerActions=new _(this.grid,this.gameState),this.turnManager=new x(this.gameState,this.infectionSystem,this.eventSystem),this.uiManager=new D(this.gameState,this.grid),this._startGame()}getGameState(){return this.gameState}getGrid(){return this.grid}getStats(){return{turn:this.gameState.currentTurn,budget:this.gameState.budget,actionPoints:this.gameState.actionPoints,totalPopulation:this.grid.totalPopulation,totalInfected:this.grid.getTotalInfected(),infectionPercentage:this.grid.getInfectionPercentage(),infectedDistricts:this.grid.getInfectedDistricts().length,healthyDistricts:this.grid.getHealthyDistricts().length,difficulty:this.gameState.difficulty,gameOver:this.gameState.gameOver,victory:this.gameState.victory}}}window.addEventListener("DOMContentLoaded",()=>{window.game=new k,console.log("🎮 City Quarantine game initialized with refactored architecture!"),console.log("Debug: Access game instance via window.game")});
